using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Text;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Project4_11_7_23
{
    public partial class Form1 : Form
    {
        DataTable dtColleges = null;
        DataTable dtMajors = null;
        DataTable dtStudents = null;
        DataTable dtCourses = null;
        DataTable dtTerms = null;

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            cboGrade.Items.Add("A");
            cboGrade.Items.Add("B");
            cboGrade.Items.Add("C");
            cboGrade.Items.Add("D");
            cboGrade.Items.Add("F");

            ShowMainMenu();
            PopulateCollegeDropDown();
            LoadMajorData();
            PopulateTermDropDown();
            PopulateCourseDropDown();
            //MessageBox.Show(Walton_DB.OpenConnection().ToString());
        }

        private void LoadMajorsData()
        {
            Walton_DB.FillDataTable_ViaSql(ref dtMajors, "SELECT COllegeID, MajorID, Major FROM tbl_Majors");
        }

        private void  RefreshStudentDropDown()
        {
            cboStudent.Items.Clear();
            Walton_DB.FillDataTable_ViaSql(ref dtStudents, "SELECT StudentID, StudentName FROM tbl_Students order by StudentName");
            if (dtStudents != null && dtStudents.Rows.Count > 0)
            {
                foreach (DataRow dr in dtStudents.Rows)
                {
                    cboStudent.Items.Add(dr["StudentName"].ToString());
                }
            }
        }

        private void PopulateTermDropDown()
        {
            Walton_DB.FillDataTable_ViaSql(ref dtTerms, "SELECT TermID, Term FROM tbl_Terms order by Term");
            if (dtTerms != null && dtTerms.Rows.Count > 0)
            {
                foreach (DataRow dr in dtTerms.Rows) 
                {
                    cboTerm.Items.Add(dr["Term"].ToString());
                }
            }
        }

        private void PopulateCourseDropDown()
        {
            Walton_DB.FillDataTable_ViaSql(ref dtCourses, "SELECT CourseID, Course FROM tbl_Courses order by Course");
            if (dtCourses != null && dtCourses.Rows.Count > 0)
            {
                foreach (DataRow dr in dtCourses.Rows)
                {
                    cboCourse.Items.Add(dr["Course"].ToString());
                }
            }
        }


        private void PopulateCollegeDropDown()
        {
            Walton_DB.FillDataTable_ViaSql(ref dtColleges, "SELECT CollegeID, College FROM tbl_Colleges order by College");
            if (dtColleges != null && dtColleges.Rows.Count > 0) 
            {
                foreach (DataRow dr in dtColleges.Rows)
                {
                    cboCollege.Items.Add(dr["College"].ToString());
                }
            }
        }

        private void LoadMajorData()
        {

            DataTable dtMajor = new DataTable();
            dtMajors.Columns.AddRange(new DataColumn[] { new DataColumn("StudentID"), new DataColumn("MajorID"), new DataColumn("Major") });
            Walton_DB.FillDataTable_ViaSql(ref dtMajors, "SELECT CollegeID, MajorID, Major FROM tbl_Majors");
        }


        private void exitToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }

        private void ShowMainMenu()
        {
            pnlMainMenu.Visible = true;
            pnlStudents.Visible = false;
            pnlGrades.Visible = false;

            pnlMainMenu.Dock = DockStyle.Fill;
        }

        private void ShowStudentMenu()
        {
            pnlMainMenu.Visible = false;
            pnlStudents.Visible = true;
            pnlGrades.Visible = false;

            pnlMainMenu.Dock = DockStyle.Fill;
        }

        private void ShowGradeMenu()
        {
            pnlMainMenu.Visible = false;
            pnlStudents.Visible = false;
            pnlGrades.Visible = true;

            pnlMainMenu.Dock = DockStyle.Fill;
        }

        private void mainMenuToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            ShowMainMenu();
        }

        private void studentToolStripMenuItem_Click(object sender, EventArgs e)
        {
            ShowStudentMenu();
        }

        private void gradesToolStripMenuItem_Click(object sender, EventArgs e)
        {
            ShowGradeMenu();
            RefreshStudentDropDown();
            RefreshGradeDGV();
        }

        private void RefreshStudentDGV()
        {
            DataTable dtStudentsDGV = null;
            Walton_DB.FillDataTable_ViaSql(ref dtStudentsDGV, "SELECT tbl_Students.StudentID, tbl_Students.StudentName, tbl_Colleges.College, tbl_Majors.Major FROM tbl_Students INNER JOIN tbl_Colleges ON tbl_Students.StudentCollege = tbl_Colleges.CollegeID INNER JOIN tbl_Majors ON tbl_Students.StudentMajor = tbl_Majors.MajorID");
            dgbStudents.DataSource = dtStudentsDGV;
            dgbStudents.Refresh();

        }

        private void RefreshGradeDGV()
        {
            DataTable dtGradeDGV = null;
            Walton_DB.FillDataTable_ViaSql(ref dtGradeDGV, "SELECT tbl_Students.StudentName, tbl_Courses.Course, tbl_Terms.Term, tbl_Grades.Grade FROM tbl_Grades INNER JOIN tbl_Students ON tbl_Grades.Student = tbl_Students.StudentID INNER JOIN tbl_Courses ON tbl_Grades.Course = tbl_Courses.CourseID INNER JOIN tbl_Terms ON tbl_Grades.Term = tbl_Terms.TermID");
            dgbGrades.DataSource = dtGradeDGV;
            dgbGrades.Refresh();
        }

            private void cboCollege_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (dtColleges != null && dtColleges.Rows.Count > 0)
            {
                string CollegeID = dtColleges.Select("College = '" + cboCollege.Text + "'")[0]["CollegeID"].ToString();

                cboMajor.Items.Clear();

                  foreach (DataRow dr in dtMajors.Select("CollegeID = '" + CollegeID + "'")) 
                {
                    cboMajor.Items.Add(dr["Major"]);
                }

            }
        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            string StudentName;
            string StudentID;
            string MajorID;

            if (txtName.Text.Trim().Length == 0)
            {
                MessageBox.Show("Please enter a valid name!");
                return;
            }

            if (cboCollege.SelectedIndex == -1) 
            {
                MessageBox.Show("You must select a college!");
                return;
            }

            if (cboMajor.SelectedIndex == -1)
            {
                MessageBox.Show("You must select a major!");
                return;
            }

            StudentID = dtColleges.Select("College = '" + cboCollege.Text + "'")[0]["CollegeID"].ToString();
            MajorID = dtMajors.Select("Major = '" + cboMajor.Text + "'")[0]["MajorID"].ToString();

           bool Result = Walton_DB.ExecSqlString("INSERT INTO tbl_Students (StudentName, StudentCollege, StudentMajor) VALUES ('" +
                txtName.Text.Trim() + "'," + StudentID.ToString() + "," + MajorID.ToString() + ")");
            if (Result == true)
            {
                MessageBox.Show("User added to database!");
            }
            else
            {
                MessageBox.Show("ERROR - User NOT added to database");
            }

            RefreshStudentDGV();
        }

        private void btnAddGrade_Click(object sender, EventArgs e)
        {
            if (cboStudent.SelectedIndex == -1) 
            {
                MessageBox.Show("You must select a student!");
                return;
            }
            if (cboCourse.SelectedIndex == -1) 
            {
                MessageBox.Show("You must select a course!");
                return;
            }
            if (cboGrade.SelectedIndex == -1)
            {
                MessageBox.Show("You must select a grade!");
                return;
            }
            if (cboTerm.SelectedIndex == -1)
            {
                MessageBox.Show("You must select a term!");
                return;
            }

           
            string CourseID;
            string StudentID;
            string TermID;

            CourseID = dtCourses.Select("Course = '" + cboCourse.Text + "'")[0]["CourseID"].ToString();
            StudentID = dtStudents.Select("Student = '" + cboStudent.Text + "'")[0]["StudentID"].ToString();
            TermID = dtTerms.Select("Term = '" + cboTerm.Text + "'")[0]["TermID"].ToString();

           bool Result = Walton_DB.ExecSqlString("INSERT INTO tbl_Grades (Student, Course, Term, Grade) VALUES (" +
                StudentID.ToString() + "," + CourseID.ToString() + "," + TermID.ToString() +
                ",'" + cboGrade.Text + "')");

            if (Result == true) 
            {
                MessageBox.Show("Grade Added!", "");
            }
            else
            {
                MessageBox.Show("ERROR - Grade NOT added!");
            }

            RefreshGradeDGV();
        }
    }
}
  
